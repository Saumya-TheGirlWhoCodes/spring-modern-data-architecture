spring:
  application:
    name: retail-analytics-app
  config:
    import: "optional:configserver:http://localhost:8888/"
  redis:
    url: "redis://localhost:6379"
  datasource:
    url: "jdbc:postgresql://localhost:5432/postgres"
    username : retail
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
#      ddl-auto: create
  cloud:
#    function.definition: calculateFavoritesConsumer;orderConsumer
    function:
      definition: calculateFavoritesConsumer;orderConsumer
    stream:
      default:
        contentType: "application/json"
      bindings:
        calculateFavoritesConsumer-in-0:
          destination: retail.calculateFavorites
          group: ${spring.application.name}
          consumer:
            concurrency: 1
        orderConsumer-in-0:
          destination: retail.orderConsumer
          group: ${spring.application.name}
          consumer:
            concurrency: 1
      rabbit:
        default:
          group: myQueue
          requiredGroups: true
          dlqQuorum:
            enabled:  true
          quorum:
            enabled: true
        bindings:
          orderConsumer-in-0:
            consumer:
              autoBindDlq: true
              quorum.enabled: true
              dlqQuorum:
                enabled: true
              prefetch: 10000
          calculateFavoritesConsumer-in-0:
            consumer:
              autoBindDlq: true
              quorum.enabled: true
              dlqQuorum:
                enabled: true
              prefetch: 10000
retail:
  favorites:
    top:
      count: 3